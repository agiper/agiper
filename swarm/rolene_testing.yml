version: "3"

networks:
  rolene_testing:
    external: true

services:
  
  # **************** INFRASTRUCTURE *****************

  # MSSQL
  mssql:
    image: agiper/mssql
    autodestroy: always
    networks:
      - rolene_testing
    ports:
      - "1433"
    environment:
      - ENVIRONMENT=testing
    volumes: 
      - ~/volume/mssql/data:/var/opt/mssql/data
    deploy:
      resources:
        reservations:
          cpus: '0.25'
          memory: 512M
        limits:
          cpus: '0.75'
          memory: 2048M
      restart_policy:
        delay: 5s
        window: 60s
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
          - node.labels.environment == testing

  # REDIS
  redis:
    image: agiper/redis
    autodestroy: always
    networks:
      - rolene_testing
    ports:
      - "6379"
    environment:
      - ENVIRONMENT=testing
    deploy:
      resources:
        reservations:
          cpus: '0.25'
          memory: 512M
        limits:
          cpus: '0.75'
          memory: 2048M
      restart_policy:
        delay: 5s
        window: 60s
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
          - node.labels.environment == testing

  # ELASTIC
  elastic:
    image: agiper/elastic
    autodestroy: always
    networks:
      - rolene_testing
    ports:
      - "5601"
      - "9200"
      - "9300"
    environment:
      - http.host=0.0.0.0
      - node.name=testing
      - cluster.name=agiper
      - ENVIRONMENT=testing
      - transport.host=127.0.0.1
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    deploy:
      mode: global
      resources:
        reservations:
          cpus: '0.25'
          memory: 1024M
        limits:
          cpus: '0.75'
          memory: 2048M
      restart_policy:
        delay: 5s
        window: 60s
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
          - node.labels.environment == testing

  # RABBITMQ
  rabbitmq:
    image: agiper/rabbitmq
    autodestroy: always
    networks:
      - rolene_testing
    ports:
      - "5672"
      - "15672"
    environment:
      - ENVIRONMENT=testing
    deploy:
      resources:
        reservations:
          cpus: '0.25'
          memory: 512M
        limits:
          cpus: '0.75'
          memory: 2048M
      restart_policy:
        delay: 5s
        window: 60s
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
          - node.labels.environment == testing
  
  # ****************** SERVICES *******************

#WEBHOST
  webhost:
    image: localhost:5000/rolene_testing/webhost
    autodestroy: always
    networks:
      rolene_testing:
        aliases:
          - rolene_testing_webhost
    ports:
      - "8080"
    environment:
      - ENVIRONMENT=testing
    deploy:
      mode: global
      resources:
        reservations:
          cpus: '0.25'
          memory: 256M
        limits:
          cpus: '0.75'
          memory: 1024M
      restart_policy:
        delay: 5s
        window: 60s
        condition: on-failure
      update_config:
        delay: 10s
        monitor: 60s
        parallelism: 1
        max_failure_ratio: 0.3
        failure_action: continue
      placement:
        constraints:
          - node.role == worker
          - node.labels.environment == testing

  #APIHOST
  apihost:
    image: localhost:5000/rolene_testing/apihost
    autodestroy: always
    networks:
      rolene_testing:
        aliases:
          - rolene_testing_apihost
    ports:
      - "8081"
    environment:
      - ENVIRONMENT=testing
    deploy:
      mode: global
      resources:
        reservations:
          cpus: '0.25'
          memory: 256M
        limits:
          cpus: '0.75'
          memory: 1024M
      restart_policy:
        delay: 5s
        window: 60s
        condition: on-failure
      update_config:
        delay: 10s
        monitor: 60s
        parallelism: 1
        max_failure_ratio: 0.3
        failure_action: continue
      placement:
        constraints:
          - node.role == worker
          - node.labels.environment == testing
  
  #JOBHOST
  jobhost:
    image: localhost:5000/rolene_testing/jobhost
    autodestroy: always
    networks:
      rolene_testing:
        aliases:
          - rolene_testing_jobhost
    ports:
      - "8082"
    environment:
      - ENVIRONMENT=testing
    deploy:
      mode: global
      resources:
        reservations:
          cpus: '0.25'
          memory: 256M
        limits:
          cpus: '0.75'
          memory: 1024M
      restart_policy:
        delay: 5s
        window: 60s
        condition: on-failure
      update_config:
        delay: 10s
        monitor: 60s
        parallelism: 1
        max_failure_ratio: 0.3
        failure_action: continue
      placement:
        constraints:
          - node.role == worker
          - node.labels.environment == testing

  