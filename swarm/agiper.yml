version: "3"

networks:
  agiper:
    external: true
  rolene_development:
    external: true
  rolene_testing:
    external: true
  rolene_staging:
    external: true
  rolene_production:
    external: true

services:
  # NGINX
  nginx:
    depends_on:
      - swarm
      - ghost
      - docker
      - teamcity
    image: agiper/nginx
    networks:
      - agiper
      - rolene_development
      - rolene_testing
      - rolene_staging
      - rolene_production
    ports:
      - "80:80"
      - "81:81"
    volumes:
      - ~/volume/nginx:/etc/nginx
    deploy:
      resources:
        reservations:
          cpus: '0.25'
          memory: 1024M
      restart_policy:
        delay: 5s
        window: 60s
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
          - node.hostname == agiper

 # SWARM
  swarm:
    image: agiper/swarm
    networks:
      - agiper
    ports:
      - "8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 512M
      restart_policy:
        delay: 5s
        window: 60s
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
          - node.hostname == agiper

  # GHOST
  ghost:
    image: agiper/ghost
    networks:
      - agiper
    ports:
      - "2368"
    volumes: 
      - ~/volume/ghost:/var/lib/ghost
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: 1024M
      restart_policy:
        delay: 5s
        window: 60s
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
          - node.hostname == agiper

# MSSQL
  mssql:
    image: agiper/mssql
    networks:
      - agiper
    ports:
      - "1433"
    environment:
      - SA_PASSWORD=rX2Ja!293F8@
    volumes: 
      - ~/volume/mssql:/var/opt/mssql
    deploy:
      resources:
        reservations:
          cpus: '0.25'
          memory: 512M
        limits:
          cpus: '0.75'
          memory: 2048M
      restart_policy:
        delay: 5s
        window: 60s
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
          - node.hostname == agiper

  # DOCKER
  docker:
    image: agiper/docker
    networks:
      - agiper
    ports:
      - "5000:5000"
    volumes:
      - ~/volume/docker:/var/lib/registry
    environment:
      - REGISTRY_HTTP_TLS_KEY=/var/lib/registry/docker.key
      - REGISTRY_HTTP_TLS_CERTIFICATE=/var/lib/registry/docker.crt
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 512M
      restart_policy:
        delay: 5s
        window: 60s
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
          - node.hostname == agiper

  # TEAMCITY
  teamcity:
    depends_on:
      - mssql
    image: agiper/teamcity
    networks:
      - agiper
    ports:
      - "8111"
    volumes:
      - ~/volume/teamcity:/var/lib/teamcity
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: 4096M
      restart_policy:
        delay: 5s
        window: 60s
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
          - node.hostname == agiper
