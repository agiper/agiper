version: "3.7"

networks:
  development:
    external: true

services:
  # DOCKUPDATER
  dockupdater:
    networks:
      - development
    image: agiper/dockupdater
    environment:
      - ENVIRONMENT=development
    deploy:
      restart_policy:
        delay: 1m
        window: 1m
        condition: any
#      placement:
#        constraints:
#          - node.role == worker
#          - node.labels.environment == development
      labels:
        dockupdater.disable: "true"
    command: --label --latest --cleanup --interval 30
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/.docker/config.json:/root/.docker/config.json

  # MSSQL
  mssql:
    image: agiper/mssql
    networks:
      - development
    ports:
      - "1433"
    environment:
      - ENVIRONMENT=development
    volumes:
      - ~/volume/mssql/data/development:/var/opt/mssql/data
    deploy:
      restart_policy:
        delay: 1m
        window: 1m
        condition: any
#      placement:
#        constraints:
#          - node.role == worker
#          - node.labels.environment == development

  # REDIS
  redis:
    image: agiper/redis
    networks:
      - development
    ports:
      - "6379"
    environment:
      - ENVIRONMENT=development
    deploy:
      restart_policy:
        delay: 1m
        window: 1m
        condition: any
#      placement:
#        constraints:
#          - node.role == worker
#          - node.labels.environment == development

  # RAVENDB
  ravendb:
    image: agiper/ravendb
    networks:
      - development
    ports:
      - "8080"
      - "38888"
    environment:
      - ENVIRONMENT=development
    deploy:
      restart_policy:
        delay: 1m
        window: 1m
        condition: any
#      placement:
#        constraints:
#          - node.role == worker
#          - node.labels.environment == development

  # ELASTIC
  elastic:
    image: agiper/elastic
    networks:
      - development
    ports:
      - "5601"
      - "9200"
      - "9300"
    environment:
      - ENVIRONMENT=development
      - "cluster.name=development"
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - "bootstrap.memory_lock=true"
      - "enforce.bootstrap.checks=false"
    deploy:
      restart_policy:
        delay: 1m
        window: 1m
        condition: any
#      placement:
#        constraints:
#          - node.role == worker
#          - node.labels.environment == development


  # STELLAR
  stellar:
    image: agiper/stellar
    networks:
      - development
    ports:
      - "8000"
    environment:
      - ENVIRONMENT=development
    deploy:
      restart_policy:
        delay: 1m
        window: 1m
        condition: any
#      placement:
#        constraints:
#          - node.role == worker
#          - node.labels.environment == development

  # RABBITMQ
  rabbitmq:
    image: agiper/rabbitmq
    networks:
      - development
    ports:
      - "5672"
      - "15672"
    environment:
      - ENVIRONMENT=development
    deploy:
      restart_policy:
        delay: 1m
        window: 1m
        condition: any
#      placement:
#        constraints:
#          - node.role == worker
#          - node.labels.environment == development
