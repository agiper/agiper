version: "3.7"

networks:
  development:
    external: true

services:
  # DOCKUPDATER
  dockupdater:
    networks:
      - development
    environment:
      - ENVIRONMENT=development
    image: dockupdater/dockupdater
    deploy:
      restart_policy:
        delay: 1m
        window: 1m
        condition: any
      placement:
        constraints:
          - node.role == manager
      labels:
        dockupdater.disable: "true"
    command: --label --latest --cleanup --interval 30
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/.docker/config.json:/root/.docker/config.json

# SERVICE_WEB
  service_web:
    image: localhost:5000/development/quorum_service_web
    networks:
      development:
        aliases:
          - development_quorum_service_web
    ports:
      - "80"
    environment:
      - ENVIRONMENT=development
    deploy:
      replicas: 1
      mode: replicated
      restart_policy:
        delay: 1m
        window: 1m
        condition: any
      update_config:
        delay: 10s
        monitor: 60s
        parallelism: 1
        max_failure_ratio: 0.3
        failure_action: continue
      placement:
        constraints:
          - node.role == manager
      labels:
        dockupdater.enable: "true"
          

  # SERVICE_API
  service_api:
    image: localhost:5000/development/quorum_service_api
    networks:
      development:
        aliases:
          - development_quorum_service_api
    ports:
      - "81"
    environment:
      - ENVIRONMENT=development
    deploy:
      replicas: 1
      mode: replicated
      restart_policy:
        delay: 1m
        window: 1m
        condition: any
      update_config:
        delay: 10s
        monitor: 60s
        parallelism: 1
        max_failure_ratio: 0.3
        failure_action: continue
      placement:
        constraints:
          - node.role == manager
      labels:
        dockupdater.enable: "true"

# SERVICE_SSE
  service_sse:
    image: localhost:5000/development/quorum_service_sse
    networks:
      development:
        aliases:
          - development_quorum_service_sse
    ports:
      - "82"
    environment:
      - ENVIRONMENT=development
    deploy:
      replicas: 1
      mode: replicated
      restart_policy:
        delay: 1m
        window: 1m
        condition: any
      update_config:
        delay: 10s
        monitor: 60s
        parallelism: 1
        max_failure_ratio: 0.3
        failure_action: continue
      placement:
        constraints:
          - node.role == manager
      labels:
        dockupdater.enable: "true"

 # ENDPOINT_BANK
  endpoint_bank:
    image: localhost:5000/development/quorum_endpoint_bank
    networks:
      development:
        aliases:
          - development_quorum_endpoint_bank
    environment:
      - ENVIRONMENT=development
    deploy:
      replicas: 1
      mode: replicated
      restart_policy:
        delay: 1m
        window: 1m
        condition: any
      update_config:
        delay: 10s
        monitor: 60s
        parallelism: 1
        max_failure_ratio: 0.3
        failure_action: continue
      placement:
        constraints:
          - node.role == manager
      labels:
        dockupdater.enable: "true"

 # ENDPOINT_FUND
  endpoint_fund:
    image: localhost:5000/development/quorum_endpoint_fund
    networks:
      development:
        aliases:
          - development_quorum_endpoint_fund
    environment:
      - ENVIRONMENT=development
    deploy:
      replicas: 1
      mode: replicated
      restart_policy:
        delay: 1m
        window: 1m
        condition: any
      update_config:
        delay: 10s
        monitor: 60s
        parallelism: 1
        max_failure_ratio: 0.3
        failure_action: continue
      placement:
        constraints:
          - node.role == manager
      labels:
        dockupdater.enable: "true"

# ENDPOINT_TRADE
  endpoint_trade:
    image: localhost:5000/development/quorum_endpoint_trade
    networks:
      development:
        aliases:
          - development_quorum_endpoint_trade
    environment:
      - ENVIRONMENT=development
    deploy:
      replicas: 1
      mode: replicated
      restart_policy:
        delay: 1m
        window: 1m
        condition: any
      update_config:
        delay: 10s
        monitor: 60s
        parallelism: 1
        max_failure_ratio: 0.3
        failure_action: continue
      placement:
        constraints:
          - node.role == manager
      labels:
        dockupdater.enable: "true"

  # ENDPOINT_MARKET
  endpoint_market:
    image: localhost:5000/development/quorum_endpoint_market
    networks:
      development:
        aliases:
          - development_quorum_endpoint_market
    environment:
      - ENVIRONMENT=development
    deploy:
      replicas: 1
      mode: replicated
      restart_policy:
        delay: 1m
        window: 1m
        condition: any
      update_config:
        delay: 10s
        monitor: 60s
        parallelism: 1
        max_failure_ratio: 0.3
        failure_action: continue
      placement:
        constraints:
          - node.role == manager
      labels:
        dockupdater.enable: "true"
